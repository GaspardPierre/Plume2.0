BEGIN;
DROP TABLE IF EXISTS "member",
"work",
"category",
"has",
"note",
"comment";
CREATE TABLE "member" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"pseudo" TEXT NOT NULL,
"email" TEXT NOT NULL,
"password" TEXT NOT NULL,
"role" TEXT NOT NULL
);
CREATE TABLE "work" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"content" TEXT NOT NULL,
"author" TEXT NOT NULL,
"title" VARCHAR NOT NULL,
"note" INT,
"member_id" INT NOT NULL REFERENCES "member"("id"),
"create_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
"update_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "category" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"genre" TEXT NOT NULL,
"create_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
"update_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "has" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"work_id" INT NOT NULL REFERENCES "work"("id"),
"category_id" INT NOT NULL REFERENCES "category"("id")
);
CREATE TABLE "note" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"average" INT,
"member_id" INT NOT NULL REFERENCES "member"("id"),
"work_id" INT NOT NULL REFERENCES "work"("id"),
"create_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
"update_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "comment" (
"id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"content" TEXT NOT NULL,
"member_id" INT NOT NULL REFERENCES "member"("id"),
"work_id" INT NOT NULL REFERENCES "work"("id")
);
COMMIT;